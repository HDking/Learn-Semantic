  ---
layout      : 'default'
css         : 'guide'

title       : 'Beginner Guide'
description : 'Creating a website with Semantic UI'
type        : 'Getting Started'
---
<%- @partial('header') %>

<div class="main container">

  ## Making the Web

  Semantic is based on the principle that the essential building block of websites are individual user interface elements. Interface elements are components like [buttons]() [dropdowns](), modals, that can be arranged arranged together in a page to create the visual flow which we think of as a website.

  # Defining the Web

  Unlike HTML tags which are a markup language produced by the opinions of committee members at the World Wide Web Consortium (W3C), Semantics UI elements are created by "language speakers" by describing elements common use *in situ*.

  In other words, everyday when designers choose to use interface elements in their websites *they* are deciding the language of the web. When a particular design idea becomes ubiquitious, it then becomes a convention, which should be adopted as part of the standards of the web.

  In Semantic these descriptions of common usage of an element form a special specifications that we call a "definition".

  # Types of definitions

  Semantic's definitions are placed into five categories based on a common set of features. These can be though of like the *kingdoms* of the natural world which somewhat arbitrarily divide up organisms based on a set of unifying attributes.

  [Elements]() - The smallest useful homogenous unit for describing page content

  Collections - Heterogeneous group of several elements which are usually found together.

  Views - Ways of presenting common website content like comments, activity feeds, cards

  Modules - Elements where a behavior and design are both an essential part of its definition

  Behaviors - Set of free-standing interactions not specifically tied to design constraints

  # Writing The Web

  UI definitions can be used by developers to create websites with a common language that remains consistent across projects. Standardizing the language of components is important for moving the web forward because it means front end developers can focus purely on describing what is different for a site, instead of redefining an element from a blank slate for each use.

  Definitions are descriptions of the accepted use of elements in designs by a groups of language speakers, or in this case "web designers". How elements are placed everyday by designers into websites *in the wild* produces, in aggregate, a set of acceptable visual constraints for an element that can be codified.

  Semantic UI's definitions should not be thought of as style guidesâ€”edicts on how things must be used, but instead as guidelines, an evolving document which can adjust as the consensus and expections of developers for designs change.

  ## Creating a Prototype

  Unlike HTML which begins with no assumptions on what a tag means, Semantic definitions begins with some baseline assumptions. A "standard" element describes in css a neutral form of an element with the most common qualities.

  Most designers can intuit "appropriate design" through their own experience with design, but it is critical for a program to be able to define these parameters explicitly for a computer.

  You may be able to say things like in most cases "a button is clickable", "a button is slightly rounded", or "a button has padding slightly smaller than its type face". Together an approximation of these averages creates a prototype case which is codified as css properties in Semantic's default theme.

  ## Varying the Prototype

  User interface elements most often exist with differences from a standard form. Semantic uses a special nomenclature for describing these modifications to an element's standard form.

  ### Types

  Types are mutually exclusive forms of an element. Just like a pet cannot be both a "cat" and a "dog", types of ui elements, like a ``vertical`` menu or a ``tiered`` menu are *mutually exclusive*.

  ### Variations

  Variations are modifications to an element that are not mutually exclusive. These are similar in concept to grammatical [modifiers](http://en.wikipedia.org/wiki/Grammatical_modifier) and can be strung together with other modifiers.

  So for example a button may be "large or small", "colored", "show primacy on a page", "have an icon", "be animated".



  Defining variatrion

  When these descriptions are inclusive, they are called <em>variations</em>

  Semantic has a special nomenclature for the

  These



  Access to easy, well designed interface components

  ## From Darwin to Dropdown

  Each interface element in Semantic is definition of that elements. This is similar to how, for example an ornithologist might Those qualities can be a set of ways it may exist. F

  If you were an ornithologist you may describe differences in birds you see by describing their features,


   that are built around common conventions in UI usage by a user group (the people who make websites), and record the ways in which that element typically appears 'in the wild'.

  The core of Semantic UI is a set of downloadable components, built with html, css, and javascript, that

  This description of an element may read something like this:

  ## Darwin to Dropdown

  Sema

   Semantic puts these UI components into five categories,

  ### Developing Websites

  Most websites are a collection of virtual objects on a screen.

  ### Semantic is a collection of
</div>
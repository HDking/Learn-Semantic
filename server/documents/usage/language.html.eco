  ---
layout      : 'default'
css         : 'guide'

title       : 'Semantics'
description : ''
type        : 'Usage'
---
<%- @partial('header') %>

<div class="main container">

  <div class="ui message">
    Please bear in mind this is a draft, most likely full of inconsistencies, pauses, breaks in tone, and other fub-ups.
  </div>

  <h2 class="ui header">
    Fabricating Language
  </h2>

  <p>Language is a difficult topic for discussion because it is such an inperceivable part of our experience of reality, the only vehicle by which humans can record meaning. So ingrained is speech in our humanity that even our internal experience is a <em>self dialog</em> an internal narrator explaining ideas to ourselves.</p>
  <p>Even though day in, day out we reap the benefits of language's evolution as a method of effectively exchanging meaning between biological information processing machines, we are still hesitant to accept its utility when creating systems of codified meaning for computers, choosing instead to manufacture new systems of meaning with a near religious devotion to the axioms and prescribed standards of its creators.</p>

  <h2 class="ui header">
    Tending to Tendencies
  </h2>


  <p>Creating a programming language is no easy task. All decisions made by an individual, even <a href="http://www.oxforddictionaries.com/us/external/files/Garner_s_American_The_Ongoing_Struggles_of_Garlic-Hangers.pdf?version=2014-10-15-1630">those with the best intentions</a> towards impartiality, add some aspects of themselves as an imprint on their work.</a>
  </p>

  <blockquote>
    "I lay claim in this novel", I heard him say, "to the essential qualities of all games: symmetry, arbitrary rules, tedium."
    <p>~Borges' <a href="http://books.google.com/books?id=1FrJqcRILaoC&pg=PA75&lpg=PA75&dq=lay+claim+in+this+novel+game+tedium+borges&source=bl&ots=pUWUsG99R-&sig=zJqgEd7QE38_IWO8kVsY-0ODf0Y&hl=en&sa=X&ei=q15VVJyvIM3LsASDzYDIDw&ved=0CDIQ6AEwAg#v=onepage&q=lay%20claim%20in%20this%20novel%20game%20tedium%20borges&f=false">Ficciones</a>
  </blockquote>

  <h3>Predisposition towards Academic Knowledge</h3>
  <p>Classifying, creating rules, and naming things are all essential parts of being a programmer. Something we are required to do day after day. Many programmers not only solve complex abstract problems routinely, but spend their free time thinking about the meta-tendencies of solving problems. How can i write this quicker next time? How can I avoid repetitive tasks? How can I abstract this out to be re-used? These are all useful traits for system design, but can lead to biases as a field to intellectualize issues. There is a fundamental tendency for computer programmers who are innate problem solvers to look for intellectual solutions to problems, to see all problems as solvable using the same techniques which problems are solved inside the curly quotes of programming.</p>

  <p>Simple solutions may not always feel as gratifying as <a href="http://en.wikipedia.org/wiki/Brainfuck">complex ones</a>. It is the tendency of scientific thinking to see the current version of truth as the Truth, the current best practices, as the only practice, whether next year they might be disavowed or forgotten for the new big thing. This mania drives forward progress, because many of the <b>new big thing</b> become the <b>old standard</b> soon enough, but still <b>requires programmers to operate under a shared, accepted obsession with the new.</b>.</p>

  <h3>Predisposition towards Novelty</h3>


  <h3>Predisposition towards Singular Rational Arguments</h3>
  <p>Many coding languages are still chosen under the belief that the most important features of a language is computational efficiency. For a long time this was true. Systems were just too slow, and compilers too inefficient to deal with code that didn't make <b>the needs of computers</b> tantamount. But this period is drawing to a close. Not only are processors' transistors only a few nanometers wide, but compiler improvements by browser-makers increase performance by double digits regularly.</p>
  <p>This is not something
  <p>It's my belief that this period in scripting language's history is if not yet finished,  the new bottleneck for creating new things with code is humans.

  <h3>Predisposition towards Computational Efficiency</h3>
  <p>
   Adopt Framework X and <b>this particular set of tests</b> will run in 10ms instead of 20ms. The argument isn't unsound, the numbers aren't fabricated, but the importance of these individual arguments are often disasterously overemphasized. Programming languages are whole ecosystems, with unintentional</p>
  <p>

  <h2 class="ui header">Twin Brothers</h2>

  <p>Even if <a href="http://en.wikipedia.org/wiki/Functionalism_(philosophy_of_mind)">pure functionalism</a> and the talk of humans as being peculiar types of machines makes you want to run and hide in a <a href="http://en.wikipedia.org/wiki/Chinese_room">far away room</a>, the argument that natural languages are much better equipped than prescribed languages to create meaning doesn't necessarily have to be tackled philosophically.</p>
  <p>Many features of natural languages are <a href="http://huh.ideophone.org/">convergent</a>, arising simultenously in different parts of the world with no contact. Natural languages even evolved under similar constraints as programming languages.</p>

  <p>Bandwidth plays a critical role in natural languages, being even more restrictive than computer systems. Speaking requiring us to physically contort internal valves in our larynx to modulate the frequency of waves of air pressure, and that's not say anything of the <a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC1315292/">fascinating complexity</a> in our capacity to observe those same modulations.</p>
  <p>Natural languages are also designed to limit not just the length of encoding to a collection of sounds, but also to optimially <b>limit the conceptual scope</b> and account for varying implementations.</p>
  <p>Often times the <b>connotations</b> (tech-speak "implementation") may vary from person to person of an idea. <b>Love</b> may connote ideas of romantic love, or in others felings of agape, or specific memories with <a href="http://en.wikipedia.org/wiki/Qualia">a quality</a> you only can understand, yet four letters and one sylabble are enough to contain the concept.</p>
  <p>A single idea may also vary from instance to instance. A normal <b>horse</b> might have four legs, but if you encountered a three-legged horse you would find no difficulty considering it a horse. In fact, you may never encounter a three-legged horse, and still might store space for it conceptually based purely on your imagination of the possibility. Or the classic Wittgenstein example of  "<a href="http://en.wikipedia.org/wiki/Language-game_(philosophy)#Description">What is a game?</a>". Natural language can accomodate for these variations in implementation, tempered by a history longer than we even know, and a whole life-time of personal experiences.</p>
  <p>Languages also evolved to define physical concepts into classes, <b>words</b>, which can be used in an exchange of ideas among systems that may include slightly fuzzy definitions</p>


  <p>Individual interface elements are the <b>nouns</b> (tech-speak "classes") which provide a <b>context</b> ("scope") to <b>limit the broadness</b> ("encapsulate") of <b>modifiers</b> ("properties") and <b>behaviors</b> ("methods").</p>
  <p>Natural languages are used today for describing interface design, although they aren't usually considered in the actual process of coding interfaces. Words like <b>popup</b>, <b>dropdown</b>, and <b>modal</b> didn't exist twenty years ago, yet now most people who visit websites understand these as essential elements of a design. They know what to expect from their behavior, how to use them and can distinguish them in a design.</p>

  <h3 class="ui header">Well What is "Everyone Else" Doing?</h3>

  <p>The resolute success industry-wide of "flatening" design: removing gradients and reducing uses of shadows, recanting of skeumorphic design, defining relationships through negative spacing instead of borders, etc. shows there is a directionality to interface languages. We can convey meaning with less <a href="http://www.interaction-design.org/encyclopedia/affordances.html">affordances</a> than ever, not primarily because web developers understanding of design has evolved, but because <b>users understanding of design has evolved from years of usage</b>.</p>

  <p>This isnt a surprising mania for programmers. Widespread internet usage is only a couple decades old, programming languages only sixty years old. Why is it unrealistic to assume we cant make something dramatically better next year? .</p>

  <h2 class='ui header'>
    Language Games
  </h2>

  <p>So where does all this leave us? What practicality can be gleamed from all this convoluted mess?</p>
  <p>For example explaining "size" as a <b>general concept</b> can be very difficult. How can you define smallness <em>in general</em> when a <b>tiny</b> planet is still much larger than a <b>gigantic</b> ant?</p>

  <h3 class="ui header">Drawing Limits</h3>
  <p>It's important to explain, that this argument only applies directly to <b>exchange languages like HTML</b> and not all programming languages. The meat and potato of most programming can be more much more complex. Moods, sentiments, feelingsâ€”the internal "processing languages" of meaning in organic systems can difficult to comprehend, and utterly unaccountable by language.</p>

</div>